name: Release All
permissions:
  contents: write
  id-token: write

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Trigger the release in dry-run mode (nx release --dry-run)'
        required: true
        type: boolean

env:
  NX_NO_CLOUD: true
  NPM_REGISTRY: jfrog.ledgerlabs.net/artifactory/api/npm/ldls-npm-prod-public

jobs:
  release:
    runs-on: ledgerhq-shared-small
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0

      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e #v4.3.0
        with:
          node-version: '22.14.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        id: install-dependencies
        run: |
          npm ci --legacy-peer-deps
          npm audit signatures

      - name: Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run nx release and capture output
          npx nx release --verbose --skip-publish > release_output.txt 2>&1

          # Check if any versions were changed
          if grep -q "Successfully released" release_output.txt || grep -q "version" release_output.txt; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

          # Display the output
          cat release_output.txt

      - name: Print Environment Info
        run: npx nx report

      - name: Login to internal JFrog registry
        id: jfrog-login
        if: steps.release.outputs.changes == 'true'
        uses: LedgerHQ/actions-security/actions/jfrog-login@actions/jfrog-login-1

      - name: Setup npm config for JFrog
        if: steps.release.outputs.changes == 'true'
        env:
          NPM_REGISTRY_TOKEN: ${{ steps.jfrog-login.outputs.oidc-token }}
        run: |
          cat << EOF | tee .npmrc
          enable-pre-post-scripts=true
          registry=https://${NPM_REGISTRY}/
          //${NPM_REGISTRY}/:_authToken=${NPM_REGISTRY_TOKEN}
          EOF

      - name: Publish
        if: steps.release.outputs.changes == 'true'
        id: publish
        run: npx nx release publish --verbose

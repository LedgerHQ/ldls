name: Publish Package
permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag representing the package to be published (e.g.: @ldls/ui-rnative@0.0.4)'
        required: true
        type: string
  push:
    tags:
      - '@ldls/**'

env:
  NX_NO_CLOUD: true
  NPM_REGISTRY: jfrog.ledgerlabs.net/artifactory/api/npm/ldls-npm-sandbox-green
  TAG: ${{inputs.tag || github.ref }}

jobs:
  release:
    runs-on: ledgerhq-shared-small
    # runs-on: ubuntu-latest
    steps:
      - run: env

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ env.TAG }}

      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e #v4.3.0
        with:
          node-version: '22.14.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        id: install-dependencies
        run: |
          npm ci --legacy-peer-deps
          npm audit signatures

      - name: Filter Project
        id: find_project
        run: |
          if [[ "${{env.TAG}}" =~ \@([^[:space:]]*)\@ ]]; then
            echo "project=${BASH_REMATCH[1]}" >> "$GITHUB_OUTPUT"
          fi

      - name: Print Environment Info
        run: npx nx report

      - name: Login to internal JFrog registry
        id: jfrog-login
        uses: LedgerHQ/actions-security/actions/jfrog-login@actions/jfrog-login-1

      - name: Setup npm config for JFrog
        env:
          NPM_REGISTRY_TOKEN: ${{ steps.jfrog-login.outputs.oidc-token }}
        run: |
          cat << EOF | tee .npmrc
          enable-pre-post-scripts=true
          registry=https://${NPM_REGISTRY}/
          //${NPM_REGISTRY}/:_authToken=${NPM_REGISTRY_TOKEN}
          EOF

      - name: Publish
        id: publish
        run: npx nx release --projects=${{ steps.find_project.outputs.project }} publish --verbose
